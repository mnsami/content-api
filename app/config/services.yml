# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    guzzle.client:
        class: GuzzleHttp\Client
        public: true

    http.spacex.launch.adapter:
        class: Endouble\Engine\Infrastructure\Service\SpacexAdapter\HttpLaunchAdapter
        public: true
        arguments:
            $client: '@guzzle.client'

    http.xkcd.comic.adapter:
        class: Endouble\Engine\Infrastructure\Service\XkcdAdapter\HttpComicAdapter
        public: true
        arguments:
            $client: '@guzzle.client'

    endouble.item.repository:
        class: Doctrine\ORM\EntityRepository
        public: true
        factory: ['@doctrine.orm.default_entity_manager', getRepository]
        arguments: ['Endouble\Engine\Domain\Model\Item\Item']

    endouble.application.get_all_past_launches:
        class: Endouble\Engine\Application\GetAllPastLaunches\GetAllPastLaunchesCommandHandler
        public: true
        arguments:
            $itemService: '@endouble.item.translating.service'
            $itemRepository: '@endouble.item.repository'

    endouble.item.translating.service:
        class: Endouble\Engine\Infrastructure\Service\TranslatingItemService
        public: true
        arguments:
            $launchAdapter: '@http.spacex.launch.adapter'
            $comicAdapter: '@http.xkcd.comic.adapter'

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
